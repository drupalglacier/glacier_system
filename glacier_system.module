<?php
/**
 * @file
 * Code for the System feature.
 */

include_once 'glacier_system.features.inc';

/**
 * Tell Drupal to also look for template files in glacier module folders.
 *
 * Implements hook_theme_registry_alter().
 */
function glacier_system_theme_registry_alter(&$theme_registry) {
  if (!path_is_admin(current_path())) {
    $modules = module_list();
    foreach ($modules as $module) {
      if (_glacier_system_starts_with($module, 'glacier_')) {
        $path  = drupal_get_path('module', $module) . '/templates';
        $theme_registry += drupal_find_theme_templates($theme_registry, '.tpl.php', $path);
      }
    }
  }
}

/**
 * Implements hook_modules_enabled().
 */
function glacier_system_modules_enabled($modules) {
  glacier_system_update_bower_dependencies($modules);
}

function glacier_system_update_bower_dependencies($modules = NULL) {
  // Scan all enabled modules if $modules is not set.
  if (!isset($modules)) {
    $modules = module_list();
  }

  // If $modules is a string (e.g. single module name)
  // wrap it in a array.
  $modules = is_array($modules) ? $modules : array($modules);
  // Scan modules for bower.json files.
  foreach ($modules as $module) {
    $module_path = drupal_get_path('module', $module);
    if (_glacier_system_starts_with($module, 'glacier_') && is_file($module_path . '/bower.json')) {
      $source_file = $module_path . '/bower.json';
      $target_file = drupal_get_path('theme', variable_get('theme_default')) . '/bower.json';
      _glacier_system_update_bower_dependencies_extend_file($source_file, $target_file);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function glacier_system_form_field_ui_display_overview_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['additional_settings']) && isset($form['additional_settings']['ds_layouts'])) {
    foreach ($form['additional_settings']['ds_layouts']['layout']['#options'] as $key => $option) {
      // Remove "fluid" display suite layouts, with glacier every layout is fluid.
      if (strpos($key, 'fluid') !== FALSE) {
        unset($form['additional_settings']['ds_layouts']['layout']['#options'][$key]);
      }
    }
  }
}

function _glacier_system_update_bower_dependencies_extend_file($source_file, $target_file) {
  $source_json_array = json_decode(file_get_contents($source_file), TRUE);
  $target_json_array = json_decode(file_get_contents($target_file), TRUE);

  $target_json_array['dependencies'] = array_merge($target_json_array['dependencies'], $source_json_array['dependencies']);
  asort($target_json_array['dependencies']);

  $target_json = json_encode($target_json_array, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES);
  // Convert to four spaces identation to two spaces identation.
  $target_json = str_replace(array('    ', '|tab|'), array('|tab|', '  '), $target_json);

  file_put_contents($target_file, $target_json . "\r\n");
}

function _glacier_system_starts_with($haystack, $needle) {
  $length = strlen($needle);
  return (substr($haystack, 0, $length) === $needle);
}
